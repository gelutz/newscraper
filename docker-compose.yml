version: "3.7"

services:
    web:
        image: node:12-alpine
        container_name: news-web
        tty: true
        stdin_open: true
        depends_on:
            - api
        ports:
            - ${CLIENT_PORT}:${CLIENT_PORT}
        working_dir: /web
        volumes:
            - ./app/web/:/web
            - ./.env:/web/.env
            - nm_web:/app/web/node_modules
        environment:
            CHOKIDAR_USEPOLLING: "true" # seems like this enables hot reloading https://stackoverflow.com/questions/44643045/running-development-server-with-create-react-app-inside-of-a-docker-container
        # command: [ "-c", "yarn && yarn start" ]
        # entrypoint: sh
        command: [ "-c", "yarn && yarn dev" ]
        entrypoint: sh
    ##
    api:
        image: node:12-alpine
        container_name: news-api
        tty: true
        stdin_open: true
        depends_on:
            - db
        # - redis
        ports:
            - ${SERVER_PORT}:${SERVER_PORT}
        working_dir: /api
        volumes:
            - ./app/api/:/api
            - ./.env:/api/.env
            - nm_api:/app/api/node_modules
        command: [ "-c", "yarn && yarn start" ]
        entrypoint: sh
        # command: [ "-c", "yarn && yarn dev" ]
        # entrypoint: sh
        #
    webscraper:
        image: node:12-alpine
        container_name: webscraper
        tty: true
        stdin_open: true
        depends_on:
            - server
        ports:
            - ${SERVICE_PORT}:${SERVICE_PORT}
        working_dir: /webscraper
        volumes:
            - ./app/webscraper/:/webscraper
            - ./.env:/webscraper/.env
            - nm_webscraper:/app/webscraper/node_modules
        # command: [ "-c", "yarn && yarn start" ]
        # entrypoint: sh
        command: [ "-c", "yarn && yarn dev" ]
        entrypoint: sh
    ##
    # redis:
    #   image: docker.io/bitnami/redis:6.2
    #   container_name: redis
    #   env_file:
    #     - ./.env
    #   environment:
    #     - REDIS_PASSWORD=${REDIS_PASSWORD}
    #     # - ALLOW_EMPTY_PASSWORD=yes
    #     - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    #   ports:
    #     - ${REDIS_PORT}:${REDIS_PORT}
    #   volumes:
    #     - redis:/bitnami/redis/data
    ##
    db:
        image: postgres:alpine
        container_name: db
        ports:
            - ${DB_PORT}:${DB_PORT}
        environment:
            POSTGRES_DB: ${DB_DATABASE}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            PSOTGRES_USER: ${DB_USER}
        volumes:
            - postgres:/var/lib/postresql/data

# networks:

volumes:
    postgres:
    redis:

    nm_api:
    nm_web:
    nm_webscraper:
