version: "3.7"

services:
    api:
        build:
            context: ./app/api/
        container_name: news-api
        env_file:
            - ./.env
        depends_on:
            - db
            # - redis
        ports:
            - ${SERVER_PORT}:${SERVER_PORT}
        volumes:
            - ./app/api/src:/app/api/src
            - ./.env:/app/api/.env
        entrypoint: [ "yarn", "dev" ]

    ##
    # redis:
    #   image: docker.io/bitnami/redis:6.2
    #   container_name: redis
    #   env_file:
    #     - ./.env
    #   environment:
    #     - REDIS_PASSWORD=${REDIS_PASSWORD}
    #     # - ALLOW_EMPTY_PASSWORD=yes
    #     - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    #   ports:
    #     - ${REDIS_PORT}:${REDIS_PORT}
    #   volumes:
    #     - redis:/bitnami/redis/data
    ##
    db:
        image: postgres:alpine
        container_name: db
        ports:
            - ${DB_PORT}:${DB_PORT}
        environment:
            POSTGRES_DB: ${DB_DATABASE}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            PSOTGRES_USER: ${DB_USER}
        volumes:
            - postgres:/var/lib/postresql/data

    ##
    web:
        build:
            context: ./app/web
        container_name: news-web
        env_file:
            - ./.env
        ports:
            - ${CLIENT_PORT}:${CLIENT_PORT}
        volumes:
            - ./app/web/:/app/web/
            - ./.env:/app/web/.env
        depends_on:
            - api
        environment:
            CHOKIDAR_USEPOLLING: "true" # seems like this enables hot reloading https://stackoverflow.com/questions/44643045/running-development-server-with-create-react-app-inside-of-a-docker-container
        entrypoint: [ "yarn", "dev" ]

# ##
#   webscraper:
#     build:
#       context: ./app/webscraper
#       target: ${DOCKER_TARGET}

#     container_name: webscraper
#     depends_on:
#       - server
#     ports:
#       - ${SERVICE_PORT}:${SERVICE_PORT}
#     volumes:
#       - /app/webscraper/node_modules
#       - ./app/webscraper/:/usr/app/webscraper
#     command: ["npm", "run", "dev"]
#     links:
#       - server

##

volumes:
    postgres:

    redis:
